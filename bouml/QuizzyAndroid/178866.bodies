class HGKitMenu
!!!382130.java!!!	HGKitMenu(inout content : List<ItemStack>)
		this(content, null);
!!!382258.java!!!	HGKitMenu(inout content : List<ItemStack>, in title : String)
		this(content, title, 45);
!!!382386.java!!!	HGKitMenu(inout content : List<ItemStack>, in title : String, in size : int)
		this(content, null, title, size);
!!!382514.java!!!	HGKitMenu(inout content : List<ItemStack>, inout parent : IMenu, in title : String, in size : int)
		super(content, parent, title, size);
!!!382642.java!!!	getPage(in pageNumber : int, inout inv : Inventory) : Inventory
		inv.clear();
		int totalItems = content.size() - pageNumber * (size - 9);
		totalItems = totalItems > (size - 9) ? (size - 9) : totalItems;
		for (int slot = 0; slot < totalItems; slot++) {
			inv.setItem(slot, content.get(slot + (size - 9) * pageNumber));
		}
		inv.setItem(size - 9, pageNumber == 0 ? null : new ItemBuilder(Material.SIGN).name("§cBack").lore(Arrays.asList("Cliquez pour revenir", "d'une page")));
		inv.setItem(size - 1, !isIn(pageNumber + 1) ? null : new ItemBuilder(Material.SIGN).name("§cAvancé").lore(Arrays.asList("Cliquez pour avancé", "d'une page")));
		if (views.containsKey(inv)) {
			views.replace(inv, pageNumber);
		}
		displayInv(pageNumber, inv);
		return inv;
!!!382770.java!!!	displayInv(in pageNumber : int, inout inv : Inventory) : void
		Bukkit.getConsoleSender().sendMessage(inv.getTitle());
		String st = "";
		for (int i = 0; i < 19; i++) {
			st += "_";
		}
		Bukkit.getConsoleSender().sendMessage(st);
		for (int i = 0; i < inv.getSize() / 9; i++) {
			String s = "§n|";
			for (int j = 0; j < 9; j++) {
				ItemStack it = inv.getItem(i * 9 + j);
				s += ItemToChar(it) + "|";
			}
			Bukkit.getConsoleSender().sendMessage(s);
		}
		Bukkit.getConsoleSender().sendMessage(st);
!!!382898.java!!!	ItemToChar(inout it : ItemStack) : char
		if (it == null) {
			return ' ';
		}
		Material mat = it.getType();
		switch (mat) {
		case AIR:
			return ' ';
		case GRASS:
		case SAND:
		case JACK_O_LANTERN:
		case BURNING_FURNACE:
		case BEDROCK:
		case ITEM_FRAME:
		case WOOL:
		case LAPIS_ORE:
		case LEAVES:
		case LEAVES_2:
		case GOLD_BLOCK:
		case ENDER_CHEST:
		case MOB_SPAWNER:
		case NOTE_BLOCK:
		case PAINTING:
		case STAINED_GLASS_PANE:
		case RED_MUSHROOM:
		case SEA_LANTERN:
		case ENDER_PORTAL_FRAME:
		case ENDER_PORTAL:
		case SLIME_BLOCK:
		case SOIL:
		case SOUL_SAND:
		case DIAMOND_BLOCK:
		case PORTAL:
		case IRON_BLOCK:
		case BRICK:
		case TNT:
		case MOSSY_COBBLESTONE:
		case OBSIDIAN:
		case COAL_ORE:
		case IRON_ORE:
		case GOLD_ORE:
		case WOOD:
		case DIAMOND_ORE:
		case REDSTONE_ORE:
		case EMERALD_ORE:
		case COAL_BLOCK:
		case LAPIS_BLOCK:
		case WORKBENCH:
		case WATER:
		case TRAPPED_CHEST:
		case THIN_GLASS:
		case SULPHUR:
		case STONE:
		case STEP:
		case STATIONARY_WATER:
		case STATIONARY_LAVA:
		case STAINED_CLAY:
		case SPONGE:
		case SPECKLED_MELON:
		case SANDSTONE:
		case REDSTONE_LAMP_ON:
		case REDSTONE_LAMP_OFF:
		case HUGE_MUSHROOM_2:
		case HUGE_MUSHROOM_1:
		case REDSTONE_BLOCK:
		case QUARTZ:
		case PISTON_STICKY_BASE:
		case PISTON_MOVING_PIECE:
		case PISTON_EXTENSION:
		case PISTON_BASE:
		case MELON_BLOCK:
		case LOG_2:
		case LOG:
		case LAVA:
		case JUKEBOX:
		case ICE:
		case HAY_BLOCK:
		case HARD_CLAY:
		case GRAVEL:
		case GLOWING_REDSTONE_ORE:
		case GLASS:
		case FURNACE:
		case EMERALD_BLOCK:
		case DROPPER:
		case DISPENSER:
		case DIRT:
		case COMMAND:
		case COBBLESTONE:
		case CHEST:
		case CAKE_BLOCK:
		case CACTUS:
		case BEACON:
		case NETHERRACK:
		case ENDER_STONE:
		case QUARTZ_ORE:
		case QUARTZ_BLOCK:
		case GLOWSTONE:
		case STAINED_GLASS:
		case PACKED_ICE:
		case RED_SANDSTONE:
		case SNOW_BLOCK:
		case CLAY:
			return '□';
		case ACACIA_DOOR:
		case WOOD_DOOR:
		case ACACIA_DOOR_ITEM:
		case BIRCH_DOOR:
		case BIRCH_DOOR_ITEM:
		case DARK_OAK_DOOR:
		case DARK_OAK_DOOR_ITEM:
		case WOODEN_DOOR:
		case SPRUCE_DOOR:
		case SPRUCE_DOOR_ITEM:
		case JUNGLE_DOOR:
		case JUNGLE_DOOR_ITEM:
		case IRON_DOOR:
		case IRON_DOOR_BLOCK:
			return '▯';
		case YELLOW_FLOWER:
		case RED_ROSE:
			return '✿';
		case SPRUCE_FENCE:
		case SPRUCE_FENCE_GATE:
		case ACACIA_FENCE:
		case ACACIA_FENCE_GATE:
		case JUNGLE_FENCE:
		case JUNGLE_FENCE_GATE:
		case FENCE:
		case FENCE_GATE:
		case DARK_OAK_FENCE:
		case DARK_OAK_FENCE_GATE:
		case BIRCH_FENCE:
		case BIRCH_FENCE_GATE:
		case IRON_FENCE:
		case NETHER_FENCE:
		case LADDER:
			return 'ʭ';
		case BIRCH_WOOD_STAIRS:
		case WOOD_STAIRS:
		case SPRUCE_WOOD_STAIRS:
		case SMOOTH_STAIRS:
		case SANDSTONE_STAIRS:
		case RED_SANDSTONE_STAIRS:
		case QUARTZ_STAIRS:
		case NETHER_BRICK_STAIRS:
		case JUNGLE_WOOD_STAIRS:
		case DARK_OAK_STAIRS:
		case COBBLESTONE_STAIRS:
		case BRICK_STAIRS:
		case ACACIA_STAIRS:
			return '▟';
		case NETHER_STAR:
			return '◊';
		case WOOD_SWORD:
		case DIAMOND_SWORD:
		case GOLD_SWORD:
		case IRON_SWORD:
		case STONE_SWORD:
			return '⚔';
		case STANDING_BANNER:
		case WALL_BANNER:
		case WALL_SIGN:
		case BANNER:
			return '▯';
		case BARRIER:
			return '✖';
		case SNOW:
			return '❊';
		case APPLE:
		case NAME_TAG:
		case MUTTON:
		case MONSTER_EGG:
		case MILK_BUCKET:
		case MELON_STEM:
		case MAP:
		case LEATHER:
		case LAVA_BUCKET:
		case INK_SACK:
		case GRILLED_PORK:
		case GOLD_NUGGET:
		case GOLDEN_APPLE:
		case GHAST_TEAR:
		case FLINT:
		case FIREWORK:
		case FIREWORK_CHARGE:
		case FIRE:
		case FEATHER:
		case EXP_BOTTLE:
		case EMERALD:
		case EGG:
		case DRAGON_EGG:
		case DIAMOND:
		case DEAD_BUSH:
		case COOKED_FISH:
		case COOKED_MUTTON:
		case COOKED_RABBIT:
		case COOKIE:
		case CROPS:
		case COOKED_CHICKEN:
		case COOKED_BEEF:
		case COCOA:
		case COAL:
		case CLAY_BRICK:
		case CLAY_BALL:
		case CARROT_ITEM:
		case CARROT:
		case CAKE:
		case BUCKET:
		case BROWN_MUSHROOM:
		case BREAD:
		case BAKED_POTATO:
		case EMPTY_MAP:
		case FIREBALL:
		case FLINT_AND_STEEL:
		case GOLDEN_CARROT:
		case MELON:
		case MONSTER_EGGS:
		case MYCEL:
		case WATER_BUCKET:
		case WATCH:
		case VINE:
		case SUGAR_CANE_BLOCK:
		case SUGAR_CANE:
		case SUGAR:
		case SPIDER_EYE:
		case SKULL_ITEM:
		case SKULL:
		case SHEARS:
		case SAPLING:
		case SADDLE:
		case ROTTEN_FLESH:
		case RAW_BEEF:
		case RABBIT:
		case RABBIT_FOOT:
		case RABBIT_HIDE:
		case RABBIT_STEW:
		case PUMPKIN_STEM:
		case PUMPKIN:
		case PUMPKIN_PIE:
		case PRISMARINE:
		case POTATO:
		case PORK:
		case POISONOUS_POTATO:
		case PAPER:
		case NETHER_WARTS:
		case NETHER_STALK:
		case POTATO_ITEM:
		case POTION:
		case PRISMARINE_CRYSTALS:
		case RAW_CHICKEN:
		case RAW_FISH:
		case WATER_LILY:
		case STRING:
		case PRISMARINE_SHARD:
		case LEASH:
		case GLASS_BOTTLE:
		case FERMENTED_SPIDER_EYE:
		case WEB:
		case WHEAT:
			return 'ס';
		case BREWING_STAND:
		case BREWING_STAND_ITEM:
		case DIODE:
		case DIODE_BLOCK_OFF:
		case DIODE_BLOCK_ON:
		case COMPASS:
		case GREEN_RECORD:
		case RECORD_10:
		case RECORD_11:
		case RECORD_12:
		case RECORD_3:
		case RECORD_4:
		case GOLD_RECORD:
		case RECORD_5:
		case REDSTONE:
		case REDSTONE_WIRE:
		case RECORD_6:
		case RECORD_7:
		case WOOD_BUTTON:
		case BLAZE_POWDER:
		case SEEDS:
		case MELON_SEEDS:
		case PUMPKIN_SEEDS:
		case STONE_BUTTON:
		case RECORD_8:
		case RECORD_9:
			return '⬬';
		case BED:
		case BED_BLOCK:
		case WRITTEN_BOOK:
		case WOOD_STEP:
		case TRIPWIRE:
		case TRAP_DOOR:
		case SMOOTH_BRICK:
		case NETHER_BRICK_ITEM:
		case NETHER_BRICK:
		case IRON_TRAPDOOR:
		case IRON_INGOT:
		case HOPPER:
		case GOLD_INGOT:
		case GLOWSTONE_DUST:
		case ENCHANTMENT_TABLE:
		case ENCHANTED_BOOK:
		case BLAZE_ROD:
		case BONE:
		case BOAT:
		case BOOK:
		case BOOKSHELF:
		case BOOK_AND_QUILL:
		case TRIPWIRE_HOOK:
			return '⏢';
		case CARROT_STICK:
		case STICK:
		case ARROW:
		case WOOD_SPADE:
		case WOOD_PICKAXE:
		case WOOD_AXE:
		case STONE_SPADE:
		case STONE_PICKAXE:
		case STONE_HOE:
		case STONE_AXE:
		case IRON_SPADE:
		case IRON_PICKAXE:
		case IRON_HOE:
		case IRON_AXE:
		case GOLD_SPADE:
		case GOLD_PICKAXE:
		case GOLD_HOE:
		case GOLD_AXE:
		case DIAMOND_SPADE:
		case DIAMOND_PICKAXE:
		case DIAMOND_HOE:
		case DIAMOND_AXE:
		case WOOD_HOE:
		case FISHING_ROD:
			return ('/');
		case BOWL:
		case MUSHROOM_SOUP:
		case COMMAND_MINECART:
		case STORAGE_MINECART:
		case MINECART:
		case EXPLOSIVE_MINECART:
		case HOPPER_MINECART:
		case POWERED_MINECART:
		case FLOWER_POT:
		case FLOWER_POT_ITEM:
			return '◡';
		case BOW:
			return '◞';
		case CARPET:
		case REDSTONE_COMPARATOR_OFF:
		case REDSTONE_COMPARATOR:
		case RAILS:
		case POWERED_RAIL:
		case GOLD_PLATE:
		case DAYLIGHT_DETECTOR:
		case DAYLIGHT_DETECTOR_INVERTED:
		case DETECTOR_RAIL:
		case REDSTONE_COMPARATOR_ON:
		case IRON_PLATE:
		case STONE_PLATE:
		case ACTIVATOR_RAIL:
		case WOOD_PLATE:
			return '_';
		case ARMOR_STAND:		
		case CHAINMAIL_BOOTS:
		case CHAINMAIL_CHESTPLATE:
		case CHAINMAIL_HELMET:
		case CHAINMAIL_LEGGINGS:
		case DIAMOND_BOOTS:
		case DIAMOND_CHESTPLATE:
		case DIAMOND_HELMET:
		case DIAMOND_LEGGINGS:
		case IRON_HELMET:
		case GOLD_LEGGINGS:
		case GOLD_BOOTS:
		case IRON_LEGGINGS:
		case IRON_CHESTPLATE:
		case IRON_BOOTS:
		case GOLD_CHESTPLATE:
		case LEATHER_BOOTS:
		case GOLD_HELMET:
		case LEATHER_LEGGINGS:
		case LEATHER_CHESTPLATE:
		case LEATHER_HELMET:
			return '╀';
		case COBBLE_WALL:
		case DOUBLE_PLANT:
		case LEVER:
		case TORCH:
		case REDSTONE_TORCH_OFF:
		case REDSTONE_TORCH_ON:
		case LONG_GRASS:
			return '┃';
		case DOUBLE_STONE_SLAB2:
		case STONE_SLAB2:
		case DOUBLE_STEP:
		case WOOD_DOUBLE_STEP:
		case SIGN:
		case SIGN_POST:
			return '━';
		case SNOW_BALL:
		case EYE_OF_ENDER:
		case MAGMA_CREAM:
		case ENDER_PEARL:
		case SLIME_BALL:
			return '⬤';
		case ANVIL:
			break;
		case CAULDRON:
		case CAULDRON_ITEM:
		case GOLD_BARDING:
		case IRON_BARDING:
		case DIAMOND_BARDING:
			return '?';
		}
		return ' ';
