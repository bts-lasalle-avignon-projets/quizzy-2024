class SQLConnection
!!!347314.java!!!	SQLConnection(inout sql : SQL, in adress : String, in port : int, in database : String, in username : String, in password : String)
			this.sql = sql;
			this.adress = adress;
			this.port = port;
			this.database = database;
			this.username = username;
			this.password = password;
			this.plugin = sql.plugin;
			this.timeout = sql.timeout;
			new BukkitRunnable() {@Override public void run() {
				if (timeout == -1) {
					cancel();
					return;
				}
				if (timeout <= 0) {
					update();
				} else {
					timeout -= 1;
				}
			}}.runTaskTimer(this.plugin, 0, 20);
!!!347442.java!!!	update() : SQL::SQLConnection
			this.timeout = sql.timeout;
			async(() -> {
				for (SQLAccess a : sql.access) {
					try {
						a.methods.lines().clear();
					} catch (Exception e) {
						error = e.getMessage();
						when_errored.run();
					}
				}
			});
			return this;
!!!347570.java!!!	connect(inout async : boolean) : SQL::SQLConnection
			Runnable run = () -> {
				try {
					Class.forName("com.mysql.jdbc.Driver");
					this.connection = DriverManager.getConnection("jdbc:mysql://" + this.adress + ":" + this.port + "/" + this.database, this.username, this.password);
					when_connected.run();
				} catch (Exception e) {
					error = e.getMessage();
					when_errored.run();
				}
			};
			if (async) {
				async(run);
			} else {
				run.run();
			}
			return this;
!!!347698.java!!!	isConnected() : boolean
			try {
				return connection != null && !connection.isClosed();
			} catch (SQLException e) {
				return false;
			}
!!!347826.java!!!	disconnect() : SQL::SQLConnection
			try {
				if (isConnected()) {
					connection.close();
				}
				when_disconnected.run();
				return this;
			} catch (Exception e) {
				error = e.getMessage();
				when_errored.run();
				return this;
			}
!!!347954.java!!!	async(inout run : Runnable) : SQL::SQLConnection
			new BukkitRunnable() {@Override public void run() {
				run.run();
			}}.runTaskAsynchronously(plugin);
			return this;
!!!348082.java!!!	WhenConnected(inout run : Runnable) : SQL::SQLConnection
			this.when_connected = run;
			return this;
!!!348210.java!!!	WhenDisconnected(inout run : Runnable) : SQL::SQLConnection
			this.when_disconnected = run;
			return this;
!!!348338.java!!!	WhenErrored(inout run : Runnable) : SQL::SQLConnection
			this.when_errored = run;
			return this;
!!!348466.java!!!	WhenTableCreation(inout run : Runnable) : SQL::SQLConnection
			this.when_tablecreation = run;
			return this;
!!!348594.java!!!	getError() : String
			return this.error;
